{"code": "04-330", "name": "Fundamentals of Software Development and Problem Solving", "base_name": "Fundamentals of Software Development and Problem Solving", "units": 12.0, "min_units": 12.0, "max_units": 12.0, "short_name": "FUND. OF SWD", "is_topic": false, "topic": null, "prereqs": {"text": "", "req_obj": null, "raw_pre_req": ""}, "offered_in_campuses": [9], "offerings": [{"campus_id": 10, "semesters": [], "sub_semesters": []}, {"campus_id": 2, "semesters": [], "sub_semesters": []}, {"campus_id": 11, "semesters": [], "sub_semesters": []}, {"campus_id": 9, "semesters": [{"semester": 1, "year": 2020}, {"semester": 1, "year": 2021}, {"semester": 1, "year": 2022}, {"semester": 1, "year": 2023}, {"semester": 1, "year": 2024}], "sub_semesters": []}, {"campus_id": 14, "semesters": [], "sub_semesters": []}, {"campus_id": 13, "semesters": [], "sub_semesters": []}, {"campus_id": 15, "semesters": [], "sub_semesters": []}, {"campus_id": 16, "semesters": [], "sub_semesters": []}, {"campus_id": 17, "semesters": [], "sub_semesters": []}, {"campus_id": 1, "semesters": [], "sub_semesters": []}, {"campus_id": 18, "semesters": [], "sub_semesters": []}, {"campus_id": 19, "semesters": [], "sub_semesters": []}, {"campus_id": 12, "semesters": [], "sub_semesters": []}, {"campus_id": 8, "semesters": [], "sub_semesters": []}], "co_reqs": [], "anti_reqs": [], "equiv": [], "long_desc": "This course lays the foundations for approaching problemsolving in a logical, welldesigned approach and implementing solutions to a range of technical problems with wellwritten, highquality, and extensible software using the basic bestpractices used in the field of software engineering. Topics include algorithm development, problemsolving decomposition and synthesis, program design, data representation, arithmetic and logical expressions, inputoutput operations, basic user interfaces, and objectoriented programming and design, with an emphasis on developing good programming habits. Intensive programming assignments are required.", "student_sets": [{"id": 896, "name": "undergraduate"}], "offering_tags": [{"name": "specific_sem", "type": "INFO", "sem": 1}], "website": null, "instructors": [], "is_repeatable": false, "is_req_repeatable": false, "repeat_limit_attempts": null, "repeat_limit_credits": null, "catalog_levels": [], "skills": [{"name": "Programming", "slug": "programming", "id": 329}], "attributes": [{"name": "collaboration & teamwork", "id": 21, "type": "attribute"}], "custom_fields": {"goals": "The successful student will be able to Understand a basic ComputerScience approach to problem solving, including algorithm development and proper testing Demonstrate proficiency in programming using a modern programming language Apply these problemsolving techniques and programming skills to develop software solutions to a wide range of technical problems.", "key_topics": "Analysis and Design, Decisions, Class Design and Implementation, Algorithm Development, Iteration, Objects\nTesting, Recursion, Basic GUIs and Event-Driven Code, Common Algorithms and Patterns, Method Abstractions, Coding Standards\nLanguage Syntax, File I/O, Source File Organization, Data Types and Operators, Arrays, Compiling and Running\nData Structures, Collections, Computer Language Comparison, Scope Rules, Debugging Methods, Basic Computer Graphics", "prerequisite_knowledge": null, "assessment_structure": "Grading Criteria\n\nProjects and Assignments - 60% of grade\n\nParticipation and Quizzes - 10% of grade\n\nMidterm and Final Exams - 30% of grade\nExams are open-book and open-note. You will have a Midterm about half-way through the course and a Final exam at the end. You will be tested on all the material covered up to the date of the exam. Missed exams cannot be made up or retaken unless there are exceptional circumstances, which will be handled on an individual basis. It is the student's responsibility to make any necessary special arrangements with the instructor at least one day before the exam is given. Percentages are not rounded up.", "relevance": "This course will lay the foundations for approaching problem-solving in a logical, well-designed approach and implementing solutions to a range of technical problems with well-written, high-quality, and extensible software using the basic \"best-practices\" used in the field of software engineering", "learning_resources": null, "extra_time_commitment": null}, "admin_context": {"suggested_by_advisor": null, "counts_for": []}, "success": true}