{"code": "15-150", "name": "Principles of Functional Programming", "base_name": "Principles of Functional Programming", "units": 12.0, "min_units": 12.0, "max_units": 12.0, "short_name": "PRIN FNCTIONL PRGMMG", "is_topic": false, "topic": null, "prereqs": {"text": "((15-151 [] at least C) or (21-127 [] at least C) or (21-128 [] at least C)) and (15-112 [] at least C)", "req_obj": {"id": 7906791, "screen_name": "fdjtby6l6hz9jl6", "original_min_units": null, "min_units": null, "is_shared": false, "is_uni_req": false, "is_concentration": false, "default_concentration": false, "choices": [{"id": 7906792, "screen_name": "f95cijrbdko19h7", "original_min_units": null, "min_units": null, "is_shared": false, "is_uni_req": false, "is_concentration": false, "default_concentration": false, "choices": [{"id": 7906793, "screen_name": "w91ef10jrx1c1sz", "original_min_units": null, "min_units": null, "is_shared": false, "is_uni_req": false, "is_concentration": false, "default_concentration": false, "choices": [{"id": 5065, "screen_name": "15-151", "constraints": [{"type": "course", "type_string": "", "data": {"course": {"code": "15-151", "id": 5064, "name": "Mathematical Foundations for Computer Science", "units": 12.0}}, "id": 5064, "is_hidden": false}], "course_parent_id": "79067930000000005065"}], "constraints": [{"type": "anyxof", "type_string": "Fulfill all of the following requirements", "data": {"x": 1, "is_and": true}, "id": 10931300, "is_hidden": false}, {"type": "mingrade", "type_string": "Minimum grade of C", "data": {"grade": "C", "only_transfer_status": false, "only_non_transfer_status": false}, "id": 10931301, "is_hidden": false}]}, {"id": 7906794, "screen_name": "6nxxm9g1dk0tsgt", "original_min_units": null, "min_units": null, "is_shared": false, "is_uni_req": false, "is_concentration": false, "default_concentration": false, "choices": [{"id": 2626, "screen_name": "21-127", "constraints": [{"type": "course", "type_string": "", "data": {"course": {"code": "21-127", "id": 2625, "name": "Concepts of Mathematics", "units": 12.0}}, "id": 2625, "is_hidden": false}], "course_parent_id": "79067940000000002626"}], "constraints": [{"type": "anyxof", "type_string": "Fulfill all of the following requirements", "data": {"x": 1, "is_and": true}, "id": 10931302, "is_hidden": false}, {"type": "mingrade", "type_string": "Minimum grade of C", "data": {"grade": "C", "only_transfer_status": false, "only_non_transfer_status": false}, "id": 10931303, "is_hidden": false}]}, {"id": 7906795, "screen_name": "6ofddt0amef69ew", "original_min_units": null, "min_units": null, "is_shared": false, "is_uni_req": false, "is_concentration": false, "default_concentration": false, "choices": [{"id": 2622, "screen_name": "21-128", "constraints": [{"type": "course", "type_string": "", "data": {"course": {"code": "21-128", "id": 2621, "name": "Mathematical Concepts and Proofs", "units": 12.0}}, "id": 2621, "is_hidden": false}], "course_parent_id": "79067950000000002622"}], "constraints": [{"type": "anyxof", "type_string": "Fulfill all of the following requirements", "data": {"x": 1, "is_and": true}, "id": 10931304, "is_hidden": false}, {"type": "mingrade", "type_string": "Minimum grade of C", "data": {"grade": "C", "only_transfer_status": false, "only_non_transfer_status": false}, "id": 10931305, "is_hidden": false}]}], "constraints": [{"type": "anyxof", "type_string": "Fulfill any of the following requirements", "data": {"x": 1, "is_and": false}, "id": 10931299, "is_hidden": false}]}, {"id": 7906796, "screen_name": "7ssfpg8wubkkgxs", "original_min_units": null, "min_units": null, "is_shared": false, "is_uni_req": false, "is_concentration": false, "default_concentration": false, "choices": [{"id": 5638, "screen_name": "15-112", "constraints": [{"type": "course", "type_string": "", "data": {"course": {"code": "15-112", "id": 5637, "name": "Fundamentals of Programming and Computer Science", "units": 12.0}}, "id": 5637, "is_hidden": false}], "course_parent_id": "79067960000000005638"}], "constraints": [{"type": "anyxof", "type_string": "Fulfill all of the following requirements", "data": {"x": 1, "is_and": true}, "id": 10931306, "is_hidden": false}, {"type": "mingrade", "type_string": "Minimum grade of C", "data": {"grade": "C", "only_transfer_status": false, "only_non_transfer_status": false}, "id": 10931307, "is_hidden": false}]}], "constraints": [{"type": "anyxof", "type_string": "Fulfill all of the following requirements", "data": {"x": 2, "is_and": true}, "id": 10931298, "is_hidden": false}]}, "raw_pre_req": ""}, "offered_in_campuses": [1, 2], "offerings": [{"campus_id": 2, "semesters": [{"semester": 1, "year": 2020}, {"semester": 1, "year": 2021}, {"semester": 1, "year": 2022}, {"semester": 1, "year": 2023}, {"semester": 1, "year": 2024}], "sub_semesters": []}, {"campus_id": 1, "semesters": [{"semester": 3, "year": 2024}, {"semester": 1, "year": 2024}, {"semester": 2, "year": 2025}, {"semester": 3, "year": 2025}, {"semester": 1, "year": 2025}], "sub_semesters": []}], "co_reqs": [], "anti_reqs": [], "equiv": [{"code": "15-212", "id": 7343, "name": null, "units": 12.0}], "long_desc": "An introduction to programming based on a functional model of computation.  The functional model is a natural generalization of algebra in which programs are formulas that describe the output of a computation in terms of its inputsthat is, as a function.  But instead of being confined to real or complexvalued functions, the functional model extends the algebraic view to a very rich class of data types, including not only aggregates built up from other types, but also functions themselves as values.  This course is an introduction to programming that is focused on the central concepts of function and type.  One major theme is the interplay between inductive types, which are built up incrementally recursive functions, which compute over inductive types by decomposition and proof by structural induction, which is used to prove the correctness and time complexity of a recursive function.  Another major theme is the role of types in structuring large programs into separate modules, and the integration of imperative programming through the introduction of data types whose values may be altered during computation.    NOTE students must achieve a C or better in order to use   this course to satisfy the prerequisite for any subsequent Computer   Science course.", "student_sets": [{"id": 896, "name": "undergraduate"}], "offering_tags": [{"name": "specific_sem", "type": "INFO", "sem": 1}, {"name": "specific_sem", "type": "INFO", "sem": 2}, {"name": "specific_sem", "type": "INFO", "sem": 3}], "website": "http://www.cs.cmu.edu/~15150/", "instructors": [], "is_repeatable": false, "is_req_repeatable": false, "repeat_limit_attempts": null, "repeat_limit_credits": null, "catalog_levels": [], "skills": [], "attributes": [{"name": "communication & presentation", "id": 19, "type": "attribute"}], "custom_fields": {"goals": "Write welltyped functional programs using the language ML Develop specifications and prove program correctness using rigorous techniques Apply equational, evaluational, and compositional reasoning techniques, and use mathematical and structural induction in proofs Analyze sequential and parallel running time of programs using the concepts of work and span Develop cost graphs and recurrences from programs, and use them to derive asymptotic bounds on work and span Use abstract types and modules to structure code with clear and welldesigned interfaces Identify opportunities for parallelism in code and exploit parallelism by choosing appropriate data structures and function designs", "key_topics": "Recursion; Specifications and Correctness Proofs; Work and Span Analysis; Parallelism; Polymorphism; Higher-order Functions; Modular Programming", "prerequisite_knowledge": "Basic mathematical background such as ability to do proof by induction, and familiarity with the core mathematical structures of Computer Science, such as sets, relations, graphs, and trees.", "assessment_structure": "Homework (35%); Labs (10%); Midterms (30%); Final (25%)", "relevance": "Intro level course to functional programming.", "learning_resources": "Lecture Notes by the course instructors; Piazza forum for Q&A and discussions; git to distribute homeworks; There are also well-known textbooks on introduction to functional programming in ML for those who seek additional resources.", "extra_time_commitment": null}, "admin_context": {"suggested_by_advisor": null, "counts_for": []}, "success": true}