{"code": "15-440", "name": "Distributed Systems", "base_name": "Distributed Systems", "units": 12.0, "min_units": 12.0, "max_units": 12.0, "short_name": "DISTRIBUTED SYSTEMS", "is_topic": false, "topic": null, "prereqs": {"text": "15-213 [] at least C", "req_obj": {"id": 7946513, "screen_name": "l8f854kl26pd8zk", "original_min_units": null, "min_units": null, "is_shared": false, "is_uni_req": false, "is_concentration": false, "default_concentration": false, "choices": [{"id": 3114, "screen_name": "15-213", "constraints": [{"type": "course", "type_string": "", "data": {"course": {"code": "15-213", "id": 3113, "name": "Introduction to Computer Systems", "units": 12.0}}, "id": 3113, "is_hidden": false}], "course_parent_id": "79465130000000003114"}], "constraints": [{"type": "anyxof", "type_string": "Fulfill all of the following requirements", "data": {"x": 1, "is_and": true}, "id": 11002090, "is_hidden": false}, {"type": "mingrade", "type_string": "Minimum grade of C", "data": {"grade": "C", "only_transfer_status": false, "only_non_transfer_status": false}, "id": 11002091, "is_hidden": false}]}, "raw_pre_req": ""}, "offered_in_campuses": [1, 2], "offerings": [{"campus_id": 2, "semesters": [{"semester": 1, "year": 2020}, {"semester": 2, "year": 2022}, {"semester": 1, "year": 2022}, {"semester": 1, "year": 2023}, {"semester": 1, "year": 2024}], "sub_semesters": []}, {"campus_id": 1, "semesters": [{"semester": 1, "year": 2023}, {"semester": 2, "year": 2024}, {"semester": 1, "year": 2024}, {"semester": 2, "year": 2025}, {"semester": 1, "year": 2025}], "sub_semesters": []}], "co_reqs": [], "anti_reqs": [], "equiv": [], "long_desc": "The goals of this course are twofold First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, scheduling, and communication across the network. Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.  The major themes this course will teach include scarcity, scheduling, concurrency and concurrent programming, naming, abstraction and modularity, imperfect communication and other types of failure, protection from accidental and malicious harm, optimism, and the use of instrumentation and monitoring and debugging tools in problem solving. As the creation and management of software systems is a fundamental goal of any undergraduate systems course, students will design, implement, and debug large programming projects.   As a consequence, competency in both the C and Java programming languages is required.", "student_sets": [{"id": 896, "name": "undergraduate"}], "offering_tags": [{"name": "specific_sem", "type": "INFO", "sem": 1}, {"name": "specific_sem", "type": "INFO", "sem": 2}], "website": "https://www.andrew.cmu.edu/course/15-440/", "instructors": [], "is_repeatable": false, "is_req_repeatable": false, "repeat_limit_attempts": null, "repeat_limit_credits": null, "catalog_levels": [], "skills": [], "attributes": [{"name": "information & data literacy", "id": 20, "type": "attribute"}, {"name": "collaboration & teamwork", "id": 21, "type": "attribute"}], "custom_fields": {"goals": "First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, caching, prefetching, scheduling, and communication across the network.Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.", "key_topics": "Scarcity, Scheduling, Concurrency, Naming, Abstraction, Modularity, Imperfect communication and other types of failures, Security, The use of monitoring and debugging in problem solving", "prerequisite_knowledge": "15-213 is a pre-requisite for basic computer systems knowledge, and programming experience.", "assessment_structure": "Projects: 45%, Problem Sets: 20%, Midterm: 15%, Final: 20%", "relevance": "15-440 is for undergraduates. Graduate students should enroll in 15-640.\n\nStudents who are interested in how current large-scale distributed systems, such as those used by Google, Facebook and Microsoft, are designed, built and tested. Any students wanting to know how real world distributed systems work and how to build and debug them from scratch.", "learning_resources": "Course textbook, Optional readings, Piazza", "extra_time_commitment": null}, "admin_context": {"suggested_by_advisor": null, "counts_for": []}, "success": true}